{"version":3,"sources":["redux/contants.js","redux/helpers.js","apiKey.js","redux/movieDuck.js","redux/configureStore.js","components/CompanyDropdownList.js","components/Keyword.js","components/KeywordList.js","components/SearchForm.js","components/Movie.js","components/MovieList.js","components/MovieApp.js","containers/MovieAppContainer.js","Base.js","serviceWorker.js","index.js"],"names":["C","SET_COMPANY","SET_KEYWORD","FETCH_KEYWORDS","FETCH_MOVIES_BY_COMPANY","FETCH_MOVIES_BY_KEYWORD","FILTER_MOVIES_BY_RATING","FILTER_MOVIES_BY_APPROVAL","START_FETCH","END_FETCH_SUCCESS","END_FETCH_FAIL","CLEAR_KEYWORDS","API_KEY","process","apiCall","params","dispatch","type","actionType","axios","get","baseUrl","apiParams","then","res","payload","data","results","catch","err","error","ApiKey","fetchMoviesByKeyword","keyword","apiCallKeywords","query","language","include_adult","page","initialState","movies","approvedCompanies","fetching","totalPages","currentPage","showPagination","isError","isApprovedCompany","middleware","applyMiddleware","thunk","logger","configureStore","createStore","state","action","keywords","company","CompanyDropdownList","companies","getCompany","className","onChange","e","target","value","tabIndex","map","key","id","name","Keyword","handleKeywordClick","Fragment","onClick","KeywordList","keywordSuggestions","SearchForm","fetchKeywords","useState","searchTerm","setSearchTerm","setErrorState","handleSubmit","errorMessage","role","placeholder","aria-label","onKeyPress","keyCode","element","console","log","Movie","poster_path","title","release_date","overview","style","image","src","alt","Grid","item","md","xs","align","substring","MovieList","container","spacing","items","keys","movie","from","opacity","leave","enter","props","original_title","MovieApp","fetchMoviesByCompany","clearKeywords","CssBaseline","Container","to","Chip","label","clickable","path","exact","render","connect","api_key","append_to_response","sort_by","with_companies","pages","filterMoviesByRating","rating","Base","store","MovieAppContainer","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6f41fc6.chunk.js","sourcesContent":["const C = {\n  SET_COMPANY: 'SET_COMPANY',\n  SET_KEYWORD: 'SET_KEYWORD',\n  FETCH_KEYWORDS: 'FETCH_KEYWORDS',\n  FETCH_MOVIES_BY_COMPANY: 'FETCH_MOVIES_BY_COMPANY',\n  FETCH_MOVIES_BY_KEYWORD: 'FETCH_MOVIES_BY_KEYWORD',\n  FILTER_MOVIES_BY_RATING: 'FILTER_MOVIES_BY_RATING',\n  FILTER_MOVIES_BY_APPROVAL: 'FILTER_MOVIES_BY_APPROVAL',\n  START_FETCH: 'START_FETCH',\n  END_FETCH_SUCCESS: 'END_FETCH_SUCCESS',\n  END_FETCH_FAIL: 'END_FETCH_FAIL',\n  CLEAR_KEYWORDS: 'CLEAR_KEYWORDS',\n  API_KEY: process.env.API_KEY,\n}\n\nexport default C;","\nimport axios from 'axios';\nimport C from './contants';\n\nexport default function apiCall(params = {}){\n\n  return (dispatch) => {\n    dispatch({ type: C.START_FETCH });\n    dispatch({ type: params.actionType });\n    return axios.get(params.baseUrl, { params: params.apiParams })\n      .then(res => dispatch({\n        type: params.actionType,\n        payload: res.data.results,\n      }))\n      .then(() => dispatch({ type: C.END_FETCH_SUCCESS }))\n      .catch(err => dispatch({ type: C.END_FETCH_FAIL, error: `${err}` }));\n  };\n}\nexport function apiCallKeywords(params = {}){\n\n  return (dispatch) => {\n    dispatch({ type: C.START_FETCH });\n    dispatch({ type: params.actionType });\n    return axios.get(params.baseUrl, { params: params.apiParams })\n      .then(res => dispatch({\n        type: params.actionType,\n        payload: res.data.results,\n      }))\n      .then(() => dispatch({ type: C.END_FETCH_SUCCESS }))\n      .then(() => dispatch({ type: C.CLEAR_KEYWORDS }))\n      .catch(err => dispatch({ type: C.END_FETCH_FAIL, error: `${err}` }));\n  };\n}\n\n","export const ApiKey = \"a6a955dd02dbd7e9ec3bbff3deb74190\";\n","// --------------- ACTIONS ---------------------\n// Action Type Constants--this allows for VS Code autosuggest\nimport C from './contants';\nimport apiCall, { apiCallKeywords } from './helpers';\nimport { ApiKey } from '../apiKey';\n\n\nexport function fetchKeywords(keyword){\n \n  const keywordParams = {\n    baseUrl: 'https://api.themoviedb.org/3/search/keyword?',\n    actionType: C.FETCH_KEYWORDS,\n    apiParams: {\n        api_key: `${ApiKey}`,\n        query: `${keyword}`,\n        pages: '1',\n    }\n  }\n  return apiCall(keywordParams);\n}\n\nexport function fetchMoviesByCompany(company){\n\n  const companyParams = {\n    baseUrl: 'https://api.themoviedb.org/3/discover/movie?',\n    actionType: C.FETCH_MOVIES_BY_COMPANY,\n    apiParams: {\n        api_key: `${ApiKey}`,\n        append_to_response: 'videos',\n        sort_by: 'popularity.desc',\n        with_companies: `${company}`,\n        pages: '1',\n    }\n  }\n  return apiCall(companyParams);\n}\n\nexport function fetchMoviesByKeyword(keyword){\n  \n  const keywordParams = {\n    baseUrl: `https://api.themoviedb.org/3/search/movie?api_key=${ApiKey}`,\n    actionType: C.FETCH_MOVIES_BY_KEYWORD,\n    apiParams: {\n        query: `${keyword}`,\n        language: 'en-US',\n        include_adult: false,\n        page: 1,\n    }\n  }\n  return apiCallKeywords(keywordParams);\n}\n\nexport function startFetch(){\n  return {\n    type: C.START_FETCH,\n    fetching: true,\n  }\n}\nexport function endFetchSuccess(){\n  return {\n    type: C.END_FETCH_SUCCESS,\n    fetching: false,\n    isError: false,\n  }\n}\nexport function endFetchFail(){\n  return {\n    type: C.END_FETCH_FAIL,\n    fetching: false,\n    isError: true,\n  }\n}\nexport function filterMoviesByRating(rating){\n  return {\n    type: C.FILTER_MOVIES_BY_RATING,\n    // payload: filter payload in reducer ...\n  }\n}\nexport function filterMoviesByApproval(){\n  return {\n    type: C.FILTER_MOVIES_BY_APPROVAL,\n  }\n}\nexport function clearKeywords(){\n  return {\n    type: C.CLEAR_KEYWORDS,\n  }\n}\n\n\n// -------------------- REDUCERS ----------------------\nconst initialState = {\n  movies: [],\n  approvedCompanies:[\n    {\n      \"name\" : 'Dreamworks Animation SKG',\n      \"id\" : '521'\n    },\n    {\n      \"name\" : 'Twentieth Century Fox Film Corp.',\n      \"id\": '25'\n    },\n    {\n      \"name\" : 'Fox Searchlight Pictures',\n      \"id\" : '43'},\n    {\n      \"name\": 'Fox 2000 Films',\n      \"id\" : '711'\n    },\n    {\n      \"name\": 'STX Entertainment',\n      \"id\" : '47729'\n    }\n  ],\n  fetching: false,\n  totalPages: null,\n  currentPage: null,\n  showPagination: false,\n  isError: false,\n  isApprovedCompany: false,\n}\n\n\nexport default function movieReducer(state=initialState, action){\n  switch (action.type){\n    case C.FETCH_MOVIES_BY_COMPANY:\n      return {\n        ...state,\n        movies: action.payload\n      }\n    case C.FETCH_KEYWORDS:\n      return {\n        ...state,\n        keywords: action.payload\n      }\n    case C.CLEAR_KEYWORDS:\n      return {\n        ...state,\n        keywords: []\n      }\n    case C.SET_COMPANY:\n      return {\n        ...state,\n        company: action.payload\n      }\n    case C.SET_KEYWORD:\n      return {\n        ...state,\n        keyword: action.payload\n      }\n    case C.FETCH_MOVIES_BY_KEYWORD:\n      return {\n        ...state,\n        movies: action.payload\n      }\n    case C.FILTER_MOVIES_BY_RATING:\n      return {\n        ...state,\n        // apply filter function\n        movies: action.payload\n      }\n    case C.FILTER_MOVIES_BY_APPROVAL:\n      return {\n        ...state,\n        // apply filter function\n        movies: action.payload      \n      }\n    case C.END_FETCH_SUCCESS:\n      return {\n        ...state,\n        fetching: false,\n        isError: false,\n      }    \n    case C.END_FETCH_FAIL:\n      return {\n        ...state,\n        fetching: false,\n        isError: true,\n      }    \n    default: \n      return state;\n  }\n}","import { createStore, applyMiddleware } from 'redux';\nimport { logger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport movieReducer from './movieDuck.js';\n\nconst middleware = applyMiddleware(thunk, logger);\n\nconst configureStore= createStore(\n  movieReducer,\n  middleware\n);\n\n\nexport default configureStore;","import React from 'react';\n\nconst CompanyDropdownList = ({ companies, getCompany }) => {\n  function handleChange(e){\n    getCompany(e.target.value);\n  }\n  return (\n    <select className=\"custom-select mb-2 mr-sm-2 mt-2\" onChange={handleChange}>\n      <option value=\"null\" tabIndex={0}>Make Selection</option>\n      {companies.map(company => {\n        return (\n          <option key={company.id} value={company.id} tabIndex={0}>{company.name}</option>\n        )\n      })}\n    </select>\n  )\n};\nexport default CompanyDropdownList;","import React from 'react';\n\nfunction Keyword({ id, name, handleKeywordClick }){\n  function handleClick(){\n    handleKeywordClick(id, name);\n  }\n  return (\n    <React.Fragment>\n       <li \n         className=\"list-group-item pointer keyword\"\n         onClick={handleClick}\n         tabIndex={0}\n\n        >\n          {name}\n        </li>\n    </React.Fragment>\n  )\n}\n\nexport default Keyword;","import React from 'react';\n// import { useSelector } from 'react-redux';\n// this is how to use hooks for grabbing state\n// import selector\n// add to component\n// leaving it out  because it defeats the purpose of the container component\nimport Keyword from './Keyword'; \n\nfunction KeywordList({ keywordSuggestions, handleKeywordClick }) {\n  // const keywords = useSelector(data => data.keywords)\n  return (\n    <ul className=\"list-group\">\n            {keywordSuggestions && keywordSuggestions.map(keyword => (\n                  <Keyword \n                    id={keyword.id}\n                    key={keyword.id}\n                    name={keyword.name}\n                    handleKeywordClick={handleKeywordClick}\n                  />\n                )\n              )\n            }\n            {/* {keywords && keywords.map(keyword => (\n                  <Keyword \n                    id={keyword.id}\n                    key={keyword.id}\n                    name={keyword.name}\n                    handleKeywordClick={handleKeywordClick}\n                  />\n                )\n              )\n            } */}\n    </ul>\n  );\n}\n\nexport default KeywordList;","import React, { useState } from 'react';\nimport KeywordList from './KeywordList';\n\n\nfunction SearchForm({ fetchMoviesByKeyword, fetchKeywords, keywordSuggestions }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  \n  const [isError, setErrorState] = useState(false);\n  function handleError(){\n    searchTerm === \"\" ? setErrorState(true) : setErrorState(false); \n  }\n  function handleSubmit(){\n    handleError();\n    if (!isError) fetchMoviesByKeyword(searchTerm);\n    setSearchTerm(\"\");\n  }\n  function handleKeywordClick(id, name){\n    setSearchTerm(name);\n    fetchMoviesByKeyword(name);\n    setSearchTerm(\"\");\n  }\n  function handleChange(e){\n    setErrorState(false);\n    setSearchTerm(e.target.value);\n    fetchKeywords(e.target.value);\n  }\n  function handleKeyPress(e){\n    const key = e.keyCode;\n    const element = e.target;\n    console.log(\"KEY>>> \", key, \" \", element.id)\n    switch(key){\n      case 13:\n        handleSubmit();\n        break;\n      default:\n        return;\n    }\n  }\n\n  const errorMessage = (  \n    <div \n      className=\"alert alert-danger\" \n      role=\"alert\">\n      Please enter a search term.\n    </div>\n  );\n\n  return (\n        <React.Fragment>  \n          {isError && errorMessage}\n          <div className=\"input-group md-form form-sm form-2 pl-0 mb-2 mt-2\">\n            <input \n              className=\"form-control my-0 py-1 lime-border\" \n              type=\"text\" \n              placeholder=\"Search\" \n              aria-label=\"Search\"\n              id=\"search\"\n              value={searchTerm}\n              // onKeyPress={handleKeyPress}\n              onChange={handleChange} \n            />\n            <div className=\"input-group-append\">\n              <button \n                className=\"input-group-text lime lighten-2\" \n                id=\"search\"\n                onClick={handleSubmit}\n              >\n                <i className=\"fa fa-search\"></i>\n              </button>\n            </div>\n          </div>\n          <KeywordList \n            keywordSuggestions={keywordSuggestions}\n            handleKeywordClick={handleKeywordClick}\n            onKeyPress={handleKeyPress}\n          />\n        \n        </React.Fragment>\n      );\n  }\n  \n\nexport default SearchForm;\n ","import React, { Fragment } from 'react';\nimport { Grid } from '@material-ui/core';\n\nfunction Movie({ poster_path, title, release_date, overview, style }) {\n  const image = (\n    poster_path != null\n    ?  \n      (<img src={`http://image.tmdb.org/t/p/w185/${poster_path}`} alt={`movie cover for ${title}`}/>)\n    : \n      (<div><p>😞 😞 😞</p><p>No movie image</p></div>)\n  );\n  return (\n    <Fragment>\n        <Grid item md={4} xs={12} align=\"center\" style={style}>\n          {image}\n        </Grid>\n        <Grid item md={8} xs={12} style={style}>\n          <h3>{title} ({release_date ? release_date.substring(0,4) : \"No Date\"})</h3>\n          {/* <p className=\"text-success\">{this.state.companies.find(props => id===this.state.company).name}</p> */}\n          <p>{overview}</p>\n        </Grid>\n    </Fragment>\n  );\n}\n\nexport default Movie;","import React from 'react';\nimport { Transition } from 'react-spring/renderprops';\nimport { Grid } from '@material-ui/core';\n\nimport Movie from './Movie'; \n\nfunction MovieList({ movies }) {\n  return (\n    <Grid container spacing={3}>\n      <Transition\n        items={movies} \n        keys={movie => movie.id}\n        from={{ opacity: 0 }}\n        leave={{ opacity: 0 }}\n        enter={{ opacity: 1 }}>\n            {movie => props => (\n                    <Movie\n                      style={props}\n                      title={movie.original_title}\n                      release_date={movie.release_date}\n                      overview={movie.overview}\n                      poster_path={movie.poster_path}\n                    />\n                )\n            }\n      </Transition>\n    </Grid>\n    // <Grid container spacing={3}>\n    //   {movies.map(movie => (\n    //       <Movie\n    //         title={movie.original_title}\n    //         release_date={movie.release_date}\n    //         overview={movie.overview}\n    //         poster_path={movie.poster_path}\n    //       />\n    //     ))\n    //   }\n    // </Grid>\n  )\n}\n\nexport default MovieList;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Chip, Container } from '@material-ui/core';\n\n// this component imports all of the other components\nimport CompanyDropdownList from './CompanyDropdownList';\nimport SearchForm from './SearchForm';\nimport MovieList from './MovieList';\n\n\n// includes other components that use same redux store /  state\nfunction MovieApp({ data, fetchMoviesByCompany, fetchMoviesByKeyword, fetchKeywords, clearKeywords }){\n  \n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container className=\"mt-2\">\n        <Router>\n          <h1 className='text-center p-3'>Movie App</h1>\n          <Link to=\"/\"><Chip label=\"Search by Company\" clickable={true} /></Link>\n          <Link to=\"/search\"><Chip label=\"Search by Keyword\" clickable={true} /></Link>\n          <Route path=\"/search\" exact render={() => (<SearchForm \n            fetchMoviesByKeyword={fetchMoviesByKeyword}\n            fetchKeywords={fetchKeywords}\n            keywordSuggestions={data.keywords}\n            clearKeywords={clearKeywords}\n          />)} />\n          <Route path=\"/\" exact render={() => (<CompanyDropdownList \n            companies={data.approvedCompanies}\n            getCompany={fetchMoviesByCompany}\n          />)} />\n          {data.movies && (<MovieList movies={data.movies} />)}\n        </Router>\n      </Container>\n      \n    \n      \n    </React.Fragment>\n  );\n};\n\nexport default MovieApp;\n","import { connect } from 'react-redux';\nimport { \n  fetchMoviesByCompany, \n  fetchMoviesByKeyword, \n  filterMoviesByRating, \n  fetchKeywords,\n  clearKeywords,\n} from '../redux/movieDuck';\nimport '../style.css';\n//importing this way prevents this file from having lots of component imports\nimport MovieApp from '../components/MovieApp';\n\nfunction mapStateToProps(state){\n  return {\n    data: state\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchMoviesByCompany: (company) => dispatch(fetchMoviesByCompany(company)),\n    fetchMoviesByKeyword: (keyword) => dispatch(fetchMoviesByKeyword(keyword)),\n    fetchKeywords: (keyword) => dispatch(fetchKeywords(keyword)),\n    clearKeywords: () => dispatch(clearKeywords()),\n    filterMoviesByRating: (rating) => dispatch(filterMoviesByRating(rating)),\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MovieApp);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport MovieAppContainer from './containers/MovieAppContainer';\n\n\nfunction Base() {\n  return (\n    <Provider store={configureStore}>\n      <div className='container'>\n        <MovieAppContainer />\n      </div>\n    </Provider>\n  );\n}\n\nexport default Base;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Base from './Base';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Base />, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}